# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: grpc.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='grpc.proto',
  package='audio',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\ngrpc.proto\x12\x05\x61udio\"i\n\x0cVideoRequest\x12\x0b\n\x03vid\x18\x01 \x01(\t\x12#\n\x0cmage_fp_list\x18\x02 \x01(\x0b\x32\r.audio.nplist\x12\x12\n\nmax_length\x18\x03 \x01(\x05\x12\x13\n\x0b\x64\x65tect_type\x18\x04 \x01(\x05\"D\n\x06nplist\x12\x0c\n\x04\x62ody\x18\x01 \x01(\x0c\x12\x1d\n\x05shape\x18\x02 \x01(\x0b\x32\x0e.audio.npshape\x12\r\n\x05\x64type\x18\x03 \x01(\t\"\x1f\n\x07npshape\x12\t\n\x01x\x18\x01 \x01(\x05\x12\t\n\x01y\x18\x02 \x01(\x05\"/\n\nVideoReply\x12!\n\nscore_list\x18\x01 \x01(\x0b\x32\r.audio.nplist2E\n\x07Greeter\x12:\n\x0e\x61udio_classify\x12\x13.audio.VideoRequest\x1a\x11.audio.VideoReply\"\x00\x62\x06proto3')
)




_VIDEOREQUEST = _descriptor.Descriptor(
  name='VideoRequest',
  full_name='audio.VideoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='vid', full_name='audio.VideoRequest.vid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mage_fp_list', full_name='audio.VideoRequest.mage_fp_list', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='max_length', full_name='audio.VideoRequest.max_length', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='detect_type', full_name='audio.VideoRequest.detect_type', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21,
  serialized_end=126,
)


_NPLIST = _descriptor.Descriptor(
  name='nplist',
  full_name='audio.nplist',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='body', full_name='audio.nplist.body', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='shape', full_name='audio.nplist.shape', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dtype', full_name='audio.nplist.dtype', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=128,
  serialized_end=196,
)


_NPSHAPE = _descriptor.Descriptor(
  name='npshape',
  full_name='audio.npshape',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='x', full_name='audio.npshape.x', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='y', full_name='audio.npshape.y', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=198,
  serialized_end=229,
)


_VIDEOREPLY = _descriptor.Descriptor(
  name='VideoReply',
  full_name='audio.VideoReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='score_list', full_name='audio.VideoReply.score_list', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=231,
  serialized_end=278,
)

_VIDEOREQUEST.fields_by_name['mage_fp_list'].message_type = _NPLIST
_NPLIST.fields_by_name['shape'].message_type = _NPSHAPE
_VIDEOREPLY.fields_by_name['score_list'].message_type = _NPLIST
DESCRIPTOR.message_types_by_name['VideoRequest'] = _VIDEOREQUEST
DESCRIPTOR.message_types_by_name['nplist'] = _NPLIST
DESCRIPTOR.message_types_by_name['npshape'] = _NPSHAPE
DESCRIPTOR.message_types_by_name['VideoReply'] = _VIDEOREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

VideoRequest = _reflection.GeneratedProtocolMessageType('VideoRequest', (_message.Message,), {
  'DESCRIPTOR' : _VIDEOREQUEST,
  '__module__' : 'grpc_pb2'
  # @@protoc_insertion_point(class_scope:audio.VideoRequest)
  })
_sym_db.RegisterMessage(VideoRequest)

nplist = _reflection.GeneratedProtocolMessageType('nplist', (_message.Message,), {
  'DESCRIPTOR' : _NPLIST,
  '__module__' : 'grpc_pb2'
  # @@protoc_insertion_point(class_scope:audio.nplist)
  })
_sym_db.RegisterMessage(nplist)

npshape = _reflection.GeneratedProtocolMessageType('npshape', (_message.Message,), {
  'DESCRIPTOR' : _NPSHAPE,
  '__module__' : 'grpc_pb2'
  # @@protoc_insertion_point(class_scope:audio.npshape)
  })
_sym_db.RegisterMessage(npshape)

VideoReply = _reflection.GeneratedProtocolMessageType('VideoReply', (_message.Message,), {
  'DESCRIPTOR' : _VIDEOREPLY,
  '__module__' : 'grpc_pb2'
  # @@protoc_insertion_point(class_scope:audio.VideoReply)
  })
_sym_db.RegisterMessage(VideoReply)



_GREETER = _descriptor.ServiceDescriptor(
  name='Greeter',
  full_name='audio.Greeter',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=280,
  serialized_end=349,
  methods=[
  _descriptor.MethodDescriptor(
    name='audio_classify',
    full_name='audio.Greeter.audio_classify',
    index=0,
    containing_service=None,
    input_type=_VIDEOREQUEST,
    output_type=_VIDEOREPLY,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_GREETER)

DESCRIPTOR.services_by_name['Greeter'] = _GREETER

# @@protoc_insertion_point(module_scope)
